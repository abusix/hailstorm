{"version":3,"file":"toast.stories-ade7e1bd.js","sources":["../../src/components/toast/toast.tsx"],"sourcesContent":["import React from \"react\";\nimport classNames from \"../../util/class-names\";\nimport {\n  ErrorIcon,\n  InfoSignIcon,\n  TickCircleIcon,\n  WarningSignIcon,\n} from \"../../icons\";\n\nconst toastVariants = {\n  info: \"border-primary-400 bg-primary-50 text-primary-600\",\n  danger: \"border-danger-400 bg-danger-50 text-danger-500\",\n  warning: \"border-warning-500 bg-warning-50 text-warning-600\",\n  success: \"border-success-400 bg-success-50 text-success-500\",\n};\n\nexport type ToastIntent = keyof typeof toastVariants;\n\nconst iconNames: Record<ToastIntent, React.ElementType> = {\n  info: InfoSignIcon,\n  success: TickCircleIcon,\n  warning: WarningSignIcon,\n  danger: ErrorIcon,\n};\n\nconst iconVariants: Record<ToastIntent, string> = {\n  info: \"fill-primary-500\",\n  danger: \"fill-danger-400\",\n  success: \"fill-success-400\",\n  warning: \"fill-warning-500\",\n};\n\nconst closeButtonVariants: Record<ToastIntent, string> = {\n  info: \"hover:bg-primary-200 active:bg-primary-300 fill-primary-500\",\n  danger: \"hover:bg-danger-100 active:bg-danger-200 fill-danger-500\",\n  success: \"hover:bg-success-200 active:bg-success-300 fill-success-500\",\n  warning: \"hover:bg-warning-100 active:bg-warning-200 fill-warning-500\",\n};\n\nexport interface ToastProps {\n  title: string;\n  intent: ToastIntent;\n  isClosable?: boolean;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nexport const Toast = ({\n  title,\n  intent,\n  children,\n  onClose,\n  isClosable = true,\n}: ToastProps) => {\n  const Icon = iconNames[intent];\n\n  return (\n    <div\n      role=\"alert\"\n      className={classNames(\n        \"pt-4.5 relative flex flex-row gap-4 rounded-lg border px-4 py-3 text-neutral-800\",\n        isClosable && \"pr-14\",\n        toastVariants[intent]\n      )}\n    >\n      <div className=\"pt-0.5\">\n        <Icon className={iconVariants[intent]} />\n      </div>\n\n      {isClosable ? (\n        <div className=\"absolute right-0 top-0 hidden pr-4 pt-2 sm:block\">\n          <button\n            type=\"button\"\n            className={classNames(\"rounded p-2.5\", closeButtonVariants[intent])}\n            onClick={onClose}\n          >\n            <span className=\"sr-only\">Close</span>\n            <Icon\n              name=\"cross\"\n              className={classNames(\"h-3 w-3\", closeButtonVariants[intent])}\n            />\n          </button>\n        </div>\n      ) : null}\n\n      <div>\n        <div className=\"text-sm font-medium\">{title}</div>\n\n        {children ? (\n          <div className=\"w-full pt-1 text-sm text-neutral-800\">{children}</div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n"],"names":["toastVariants","iconNames","InfoSignIcon","TickCircleIcon","WarningSignIcon","ErrorIcon","iconVariants","closeButtonVariants","Toast","title","intent","children","onClose","isClosable","Icon","jsxs","classNames","jsx"],"mappings":"yOASA,MAAAA,EAAA,CAAsB,KAAA,oDACd,OAAA,iDACE,QAAA,oDACC,QAAA,mDAEX,EAIAC,EAAA,CAA0D,KAAAC,EAClD,QAAAC,EACG,QAAAC,EACA,OAAAC,CAEX,EAEAC,EAAA,CAAkD,KAAA,mBAC1C,OAAA,kBACE,QAAA,mBACC,QAAA,kBAEX,EAEAC,EAAA,CAAyD,KAAA,8DACjD,OAAA,2DACE,QAAA,8DACC,QAAA,6DAEX,EAUOC,EAAA,CAAA,CAAe,MAAAC,EACpB,OAAAC,EACA,SAAAC,EACA,QAAAC,EACA,WAAAC,EAAA,EAEF,IAAA,CACE,MAAAC,EAAAb,EAAAS,CAAA,EAEA,OAAAK,EACE,MAAC,CAAA,KAAA,QACM,UAAAC,EACM,mFACTH,GAAA,QACcb,EAAAU,CAAA,CACM,EACtB,SAAA,CAEAO,EAAA,MAAA,CAAA,UAAA,SAAA,SAAAA,EAAAH,EAAA,CAAA,UAAAR,EAAAI,CAAA,CAAA,CAAA,CAAA,CAAA,EAEAG,EAAAI,EAAA,MAAA,CAAA,UAAA,mDAAA,SAAAF,EAII,SAAC,CAAA,KAAA,SACM,UAAAC,EAAA,gBAAAT,EAAAG,CAAA,CAAA,EAC6D,QAAAE,EACzD,SAAA,CAETK,EAAA,OAAA,CAAA,UAAA,UAAA,SAAA,QAAA,EAA+BA,EAC/BH,EAAC,CAAA,KAAA,QACM,UAAAE,EAAA,UAAAT,EAAAG,CAAA,CAAA,CACuD,CAAA,CAC9D,CAAA,CAAA,CAAA,CAAA,EAAA,KAGFK,EAAA,MAAA,CAAA,SAAA,CAGFE,EAAA,MAAA,CAAA,UAAA,sBAAA,SAAAR,EAAA,EAA4CE,EAAAM,EAAA,MAAA,CAAA,UAAA,uCAAA,SAAAN,CAAA,CAAA,EAAA,IAIxC,EAAA,CACN,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;"}