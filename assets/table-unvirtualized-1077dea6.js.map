{"version":3,"file":"table-unvirtualized-1077dea6.js","sources":["../../src/components/table-unvirtualized/table-body/table-body-row/table-body-row.tsx","../../src/components/table-unvirtualized/table-body/table-body-cell/table-body-cell.tsx","../../src/components/table-unvirtualized/table-body/table-body-placeholder/table-body-placeholder.tsx","../../src/components/table-unvirtualized/table-body/table-body-loading-indicator/table-body-loading-indicator.tsx","../../src/components/table-unvirtualized/table-body/table-body.tsx","../../src/components/table-unvirtualized/table-header/table-header-cell/table-header-cell.tsx","../../src/components/table-unvirtualized/table-header/table-header-row/table-header-row.tsx","../../src/components/table-unvirtualized/table-header/table-header.tsx","../../src/components/table-unvirtualized/table-unvirtualized.tsx"],"sourcesContent":["import React from \"react\";\nimport { forwardRef, HTMLProps, ReactNode } from \"react\";\nimport classNames from \"../../../../util/class-names\";\n\nexport interface RowProps extends HTMLProps<HTMLTableRowElement> {\n  children: ReactNode;\n  className?: string;\n  isExpanded?: boolean;\n}\n\nconst TableBodyRow = forwardRef<HTMLTableRowElement, RowProps>(\n  ({ children, className, isExpanded, style }, ref) => {\n    return (\n      <tr\n        className={classNames(\n          className,\n          isExpanded ? \"bg-primary-50\" : \"border-b border-b-neutral-300\",\n          \"last:border-none\"\n        )}\n        ref={ref}\n        style={style}\n      >\n        {children}\n      </tr>\n    );\n  }\n);\n\nexport { TableBodyRow };\n","import { CSSProperties, forwardRef, ReactNode } from \"react\";\nimport classNames from \"../../../../util/class-names\";\nimport React from \"react\";\n\nexport interface CellProps {\n  // cells can be children-less (for e.g. placeholder columns)\n  children?: ReactNode;\n  style?: CSSProperties;\n  colSpan?: number;\n  className?: string;\n  align?: CellAlignment;\n  isTextContent?: boolean;\n}\n\ntype CellAlignment = \"left\" | \"center\" | \"right\";\n\nconst cellAlignStyles: Record<CellAlignment, string> = {\n  left: \"\",\n  center: \"flex justify-center items-center\",\n  right: \"flex justify-end items-end\",\n};\n\nconst TableBodyCell = forwardRef<HTMLTableCellElement, CellProps>(\n  (\n    {\n      children,\n      align = \"left\",\n      isTextContent = true,\n      className,\n      colSpan,\n      style,\n    },\n    ref\n  ) => {\n    return (\n      <td\n        className={classNames(\"h-16 pr-6 first:pl-6\", className)}\n        ref={ref}\n        style={style}\n        colSpan={colSpan}\n      >\n        {isTextContent ? (\n          <div className={classNames(\"paragraph-100\", cellAlignStyles[align])}>\n            {children}\n          </div>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n);\n\nexport { TableBodyCell };\n","import React from \"react\";\nimport { TableBodyCell } from \"../table-body-cell/table-body-cell\";\nimport { TableBodyRow } from \"../table-body-row/table-body-row\";\n\nexport interface EmptyPlaceholderProps {\n  title: string;\n  description: string;\n  colSpan: number;\n  children?: React.ReactNode;\n}\n\nexport const TableEmptyPlaceholder = ({\n  title,\n  description,\n  colSpan,\n  children,\n}: EmptyPlaceholderProps) => {\n  return (\n    <TableBodyRow aria-label=\"No data available in this table\">\n      <TableBodyCell colSpan={colSpan} className=\"h-80\">\n        <div className=\"min-h-96 max-w-96 flex flex-col items-center justify-center\">\n          <h5 className=\"headline-300 mb-1\">{title}</h5>\n\n          <p className=\"paragraph-100 mb-2\">{description}</p>\n\n          {children}\n        </div>\n      </TableBodyCell>\n    </TableBodyRow>\n  );\n};\n","import React from \"react\";\nimport { Spinner } from \"../../../spinner/spinner\";\nimport { TableBodyRow } from \"../table-body-row/table-body-row\";\nimport { TableBodyCell } from \"../table-body-cell/table-body-cell\";\n\nexport interface TableBodyLoadingIndicatorProps {\n  colSpan: number;\n}\n\nexport const TableBodyLoadingIndicator = ({\n  colSpan,\n}: TableBodyLoadingIndicatorProps) => {\n  return (\n    <TableBodyRow>\n      <TableBodyCell className=\"h-80 text-center\" colSpan={colSpan}>\n        <div className=\"flex items-center justify-center\">\n          <Spinner />\n        </div>\n      </TableBodyCell>\n    </TableBodyRow>\n  );\n};\n","import React from \"react\";\nimport { TableBodyRow } from \"./table-body-row/table-body-row\";\nimport { TableBodyCell } from \"./table-body-cell/table-body-cell\";\nimport { TableEmptyPlaceholder } from \"./table-body-placeholder/table-body-placeholder\";\nimport { TableBodyLoadingIndicator } from \"./table-body-loading-indicator/table-body-loading-indicator\";\n\nexport interface TableBodyProps {\n  children: React.ReactNode;\n}\n\nconst TableBody = ({ children }: TableBodyProps) => {\n  return <tbody className=\"bg-neutral-0\">{children}</tbody>;\n};\n\nTableBody.LoadingIndicator = TableBodyLoadingIndicator;\nTableBody.EmptyPlaceholder = TableEmptyPlaceholder;\nTableBody.Row = TableBodyRow;\nTableBody.Cell = TableBodyCell;\n\nexport { TableBody };\n","import React from \"react\";\nimport { CSSProperties, ReactNode } from \"react\";\nimport classNames from \"../../../../util/class-names\";\n\ntype TableCellAlign = \"left\" | \"center\" | \"right\";\n\nexport interface TableHeaderCellProps {\n  children: ReactNode;\n  align?: TableCellAlign;\n  className?: string;\n  colSpan?: number;\n  style?: CSSProperties;\n}\n\nconst cellAlign: Record<TableCellAlign, string> = {\n  left: \"text-left\",\n  center: \"text-center\",\n  right: \"text-right\",\n};\n\nexport const TableHeaderCell = ({\n  children,\n  align = \"left\",\n  colSpan,\n  style,\n  className,\n}: TableHeaderCellProps) => {\n  return (\n    <th\n      scope=\"col\"\n      colSpan={colSpan}\n      style={style}\n      className={classNames(\n        `headline-100 bg-neutral-50 py-4 pr-6 uppercase text-neutral-700 first:pl-6`,\n        cellAlign[align],\n        className\n      )}\n    >\n      {children}\n    </th>\n  );\n};\n","import React from \"react\";\nimport { ReactNode } from \"react\";\n\nexport interface TableHeaderRowProps {\n  children: ReactNode;\n}\n\nexport const TableHeaderRow = ({ children }: TableHeaderRowProps) => {\n  return <tr>{children}</tr>;\n};\n","import { ForwardedRef, forwardRef, ReactNode } from \"react\";\nimport { TableHeaderCell } from \"./table-header-cell/table-header-cell\";\nimport { TableHeaderRow } from \"./table-header-row/table-header-row\";\nimport React from \"react\";\nimport classNames from \"../../../util/class-names\";\n\nexport interface TableHeaderProps {\n  children: ReactNode;\n}\n\nconst TableHeader = forwardRef(\n  (\n    { children }: TableHeaderProps,\n    ref: ForwardedRef<HTMLTableSectionElement>\n  ) => {\n    return (\n      <thead\n        ref={ref}\n        className={classNames(\n          \"bg-abusix-neutral-100 sticky top-0 overflow-hidden rounded-lg\",\n          \"after:absolute after:bottom-0 after:left-0 after:h-px after:w-full after:bg-neutral-300\"\n        )}\n      >\n        {children}\n      </thead>\n    );\n  }\n);\n\nTableHeader.displayName = \"TableHeader\";\n\nconst TableHeaderNamespace = Object.assign(TableHeader, {\n  Cell: TableHeaderCell,\n  Row: TableHeaderRow,\n});\n\nexport { TableHeaderNamespace as TableHeader };\n","import React from \"react\";\nimport { TableBody } from \"./table-body/table-body\";\nimport { TableHeader } from \"./table-header/table-header\";\nimport classNames from \"../../util/class-names\";\n\ninterface TableUnvirtualizedProps {\n  children: React.ReactNode;\n  height?: number;\n  isContainerBordersShown?: boolean;\n  hasFixedTableLayout?: boolean;\n}\n\nconst TableUnvirtualized = ({\n  children,\n  height,\n  isContainerBordersShown = true,\n  hasFixedTableLayout,\n}: TableUnvirtualizedProps) => {\n  return (\n    <div\n      className={classNames(\n        \"rounded-lg bg-neutral-0\",\n        isContainerBordersShown &&\n          \"overflow-y-auto rounded-lg border border-neutral-300\"\n      )}\n      style={{ height }}\n    >\n      <table\n        className={classNames(\n          hasFixedTableLayout && \"table-fixed\",\n          \"w-full text-sm\"\n        )}\n      >\n        {children}\n      </table>\n    </div>\n  );\n};\n\nTableUnvirtualized.Body = TableBody;\nTableUnvirtualized.Header = TableHeader;\n\nexport { TableUnvirtualized };\n"],"names":["TableBodyRow","forwardRef","children","className","isExpanded","style","ref","jsx","classNames","cellAlignStyles","TableBodyCell","align","isTextContent","colSpan","TableEmptyPlaceholder","title","description","jsxs","TableBodyLoadingIndicator","Spinner","TableBody","cellAlign","TableHeaderCell","TableHeaderRow","TableHeader","TableHeaderNamespace","TableUnvirtualized","height","isContainerBordersShown","hasFixedTableLayout"],"mappings":"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"}