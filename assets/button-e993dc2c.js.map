{"version":3,"file":"button-e993dc2c.js","sources":["../../src/components/button/button.tsx"],"sourcesContent":["import React, { SVGProps } from \"react\";\nimport classNames from \"../../util/class-names\";\nimport { Spinner } from \"../spinner/spinner\";\n\nconst buttonVariants = {\n  primary:\n    \"bg-primary-500 text-neutral-0 hover:bg-primary-600 active:bg-primary-600 focus:ring-2 focus:ring-primary-200 focus:bg-primary-600 disabled:bg-primary-200 fill-neutral-0\",\n  secondary:\n    \"text-neutral-700 bg-neutral-0 border border-neutral-400 hover:border-neutral-600 hover:text-neutral-800 active:bg-neutral-100 focus:ring-2 focus:ring-primary-200 focus:text-neutral-800 disabled:text-neutral-500 disabled:border-neutral-300 disabled:bg-neutral-0 fill-neutral-0\",\n  minimal:\n    \"text-neutral-700 hover:bg-neutral-100 hover:text-neutral-800 active:bg-neutral-200 focus:ring-2 focus:ring-primary-200 focus:text-neutral-800 disabled:text-neutral-500 disabled:bg-neutral-0 fill-neutral-0\",\n  danger:\n    \"text-neutral-0 bg-danger-500 hover:bg-danger-500 active:bg-danger-700 focus:ring-2 focus:ring-danger-100 focus:bg-danger-600 disabled:bg-danger-100 fill-neutral-0\",\n  \"danger-secondary\":\n    \"bg-neutral-0 text-danger-500 border border-danger-400 hover:bg-danger-50 hover:text-danger-600 active:border-danger-700 active:text-danger-700 active:bg-danger-100 focus:ring-2 focus:ring-danger-100 focus:text-danger-600 disabled:border-danger-100 disabled:text-danger-100 disabled:bg-neutral-0 fill-danger-600 disabled:fill-danger-100\",\n};\n\nexport type ButtonType = keyof typeof buttonVariants;\n\nconst iconVariants = {\n  primary: \"text-neutral-0\",\n  secondary:\n    \"fill-neutral-600 group-hover:text-neutral-700 group-focus:text-neutral-700 group-disabled:text-neutral-400\",\n  minimal:\n    \"fill-neutral-600 group-hover:text-neutral-700 group-focus:text-neutral-700 group-disabled:text-neutral-400\",\n  danger: \"\",\n  \"danger-secondary\": \"\",\n};\n\nexport interface ButtonProps {\n  className?: string;\n  children: string;\n  type?: ButtonType;\n  onClick: () => void;\n  loading?: boolean;\n  LeftIcon?: React.ElementType;\n  RightIcon?: React.ElementType;\n  disabled?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      children,\n      onClick,\n      loading,\n      LeftIcon,\n      RightIcon,\n      disabled = false,\n      type = \"primary\",\n    },\n    ref\n  ) => {\n    return (\n      <button\n        type=\"button\"\n        className={classNames(\n          `group flex h-8 items-center gap-2 whitespace-nowrap rounded px-4 text-xs font-semibold focus:outline-none disabled:cursor-not-allowed`,\n          buttonVariants[type],\n          className\n        )}\n        onClick={onClick}\n        disabled={disabled}\n        ref={ref}\n      >\n        {loading ? <Spinner size=\"small\" /> : null}\n\n        {LeftIcon && !loading ? (\n          <LeftIcon className={iconVariants[type]} />\n        ) : null}\n\n        {children}\n\n        {RightIcon ? <RightIcon className={iconVariants[type]} /> : null}\n      </button>\n    );\n  }\n);\n\nexport { Button };\n"],"names":["buttonVariants","iconVariants","Button","React","className","children","onClick","loading","LeftIcon","RightIcon","disabled","type","ref","jsxs","classNames","jsx","Spinner"],"mappings":"gLAIA,MAAAA,EAAA,CAAuB,QAAA,2KAEnB,UAAA,sRAEA,QAAA,+MAEA,OAAA,qKAEA,mBAAA,iVAGJ,EAIAC,EAAA,CAAqB,QAAA,iBACV,UAAA,6GAEP,QAAA,6GAEA,OAAA,GACM,mBAAA,EAEV,EAaAC,EAAAC,EAAA,WAAqB,CAAA,CAEjB,UAAAC,EACE,SAAAC,EACA,QAAAC,EACA,QAAAC,EACA,SAAAC,EACA,UAAAC,EACA,SAAAC,EAAA,GACW,KAAAC,EAAA,SACJ,EAAAC,IAITC,EACE,SAAC,CAAA,KAAA,SACM,UAAAC,EACM,wIACTd,EAAAW,CAAA,EACmBP,CACnB,EACF,QAAAE,EACA,SAAAI,EACA,IAAAE,EACA,SAAA,CAECL,EAAAQ,EAAAC,EAAA,CAAA,KAAA,OAAA,CAAA,EAAA,KAAqCR,GAAA,CAAAD,EAAAQ,EAAAP,EAAA,CAAA,UAAAP,EAAAU,CAAA,CAAA,CAAA,EAAA,KAIlCN,EAEHI,EAAAM,EAAAN,EAAA,CAAA,UAAAR,EAAAU,CAAA,CAAA,CAAA,EAAA,IAE2D,CAAA,CAAA,CAIpE"}